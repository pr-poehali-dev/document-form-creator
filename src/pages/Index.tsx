import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import Icon from '@/components/ui/icon';

interface WorkItem {
  id: number;
  smetaNumber: string;
  name: string;
  edNumber: string;
  units: string;
  quantity: string;
  price: string;
  totalPrice: string;
}

const Index = () => {
  const [activeForm, setActiveForm] = useState<'ks2' | 'ks3' | null>(null);
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [workItems, setWorkItems] = useState<WorkItem[]>([
    { id: 1, smetaNumber: '', name: '', edNumber: '', units: '', quantity: '', price: '', totalPrice: '' }
  ]);
  const [formData, setFormData] = useState({
    actNumber: '',
    docDate: '06.08.2025',
    ndsRate: '20',
    ndsType: '1', // 1-–Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å, 2-–≤ —Å—É–º–º–µ, 3-—Å–≤–µ—Ä—Ö—É
    printForm: '350'
  });

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setUploadedFile(file);
    }
  };

  const calculateTotals = () => {
    let total = 0;
    let ndsTotal = 0;
    
    workItems.forEach(item => {
      const itemTotal = parseFloat(item.totalPrice) || 0;
      total += itemTotal;
      
      if (formData.ndsType !== '1') {
        const ndsRate = parseFloat(formData.ndsRate) / 100;
        if (formData.ndsType === '2') {
          // –ù–î–° –≤ —Å—É–º–º–µ
          ndsTotal += itemTotal * ndsRate / (1 + ndsRate);
        } else if (formData.ndsType === '3') {
          // –ù–î–° —Å–≤–µ—Ä—Ö—É
          ndsTotal += itemTotal * ndsRate;
        }
      }
    });
    
    return { total, ndsTotal };
  };

  const addWorkItem = () => {
    const newId = Math.max(...workItems.map(item => item.id), 0) + 1;
    setWorkItems([...workItems, {
      id: newId,
      smetaNumber: '',
      name: '',
      edNumber: '',
      units: '',
      quantity: '',
      price: '',
      totalPrice: ''
    }]);
  };

  const deleteWorkItem = (id: number) => {
    if (workItems.length > 1) {
      setWorkItems(workItems.filter(item => item.id !== id));
    }
  };

  const updateWorkItem = (id: number, field: keyof WorkItem, value: string) => {
    setWorkItems(prevItems => 
      prevItems.map(item => {
        if (item.id === id) {
          const updatedItem = { ...item, [field]: value };
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
          if (field === 'quantity' || field === 'price') {
            const quantity = parseFloat(field === 'quantity' ? value : item.quantity) || 0;
            const price = parseFloat(field === 'price' ? value : item.price) || 0;
            updatedItem.totalPrice = (quantity * price).toFixed(2);
          }
          
          return updatedItem;
        }
        return item;
      })
    );
  };

  const handleExportExcel = () => {
    alert('–î–æ–∫—É–º–µ–Ω—Ç –ö–°-2 —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ Excel! üìä');
  };

  const resetForm = () => {
    setActiveForm(null);
    setUploadedFile(null);
    setWorkItems([{ id: 1, smetaNumber: '', name: '', edNumber: '', units: '', quantity: '', price: '', totalPrice: '' }]);
  };

  const { total, ndsTotal } = calculateTotals();

  return (
    <div className="min-h-screen bg-slate-50">
      {/* Header */}
      <header className="bg-white border-b border-slate-200">
        <div className="max-w-7xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="bg-primary text-white p-2 rounded-lg">
                <Icon name="FileText" size={24} />
              </div>
              <div>
                <h1 className="text-xl font-semibold text-slate-900">–î–æ–∫—É–º–µ–Ω—Ç—ã –ì–û–°–¢</h1>
                <p className="text-sm text-slate-600">–°–æ–∑–¥–∞–Ω–∏–µ –ö–°-2 –∏ –ö–°-3</p>
              </div>
            </div>
            {activeForm && (
              <Button variant="outline" onClick={resetForm}>
                <Icon name="ArrowLeft" size={16} className="mr-2" />
                –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É
              </Button>
            )}
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-6 py-8">
        {!activeForm ? (
          // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
          <div className="space-y-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-slate-900 mb-4">
                –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ö–°-2 –∏ –ö–°-3
              </h2>
              <p className="text-lg text-slate-600 max-w-2xl mx-auto">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–æ–∫ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –∏ 
                –∞–∫—Ç–æ–≤ –æ –ø—Ä–∏–µ–º–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –ø–æ –ì–û–°–¢
              </p>
            </div>

            <div className="grid md:grid-cols-2 gap-6 max-w-4xl mx-auto">
              <Card className="group hover:shadow-xl transition-all duration-300 cursor-pointer border-2 hover:border-primary/30 hover:scale-105" 
                    onClick={() => setActiveForm('ks2')}>
                <CardHeader className="pb-4">
                  <div className="flex items-center gap-4">
                    <div className="bg-blue-50 p-3 rounded-xl group-hover:bg-primary/10 transition-colors">
                      <Icon name="FileBarChart" size={32} className="text-primary" />
                    </div>
                    <div>
                      <CardTitle className="text-xl">–ö–°-2</CardTitle>
                      <CardDescription>–°–ø—Ä–∞–≤–∫–∞ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç</CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-3 text-sm text-slate-600">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ì–û–°–¢
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ù–î–°
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel –∏ PDF
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="group hover:shadow-xl transition-all duration-300 cursor-pointer border-2 hover:border-primary/30 hover:scale-105"
                    onClick={() => setActiveForm('ks3')}>
                <CardHeader className="pb-4">
                  <div className="flex items-center gap-4">
                    <div className="bg-green-50 p-3 rounded-xl group-hover:bg-primary/10 transition-colors">
                      <Icon name="ClipboardCheck" size={32} className="text-primary" />
                    </div>
                    <div>
                      <CardTitle className="text-xl">–ö–°-3</CardTitle>
                      <CardDescription>–ê–∫—Ç –æ –ø—Ä–∏–µ–º–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç</CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-3 text-sm text-slate-600">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –°–≤—è–∑—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –ö–°-2
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–¥–ø–∏—Å–µ–π
                    </li>
                  </ul>
                </CardContent>
              </Card>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
            <Card className="bg-gradient-to-r from-primary/5 to-blue-50 border-primary/20">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Upload" size={24} className="text-primary" />
                  –ó–∞–≥—Ä—É–∑–∫–∞ —Å–º–µ—Ç
                </CardTitle>
                <CardDescription>
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –≤–∏–¥–æ–≤ —É—Å–ª—É–≥, —Ü–µ–Ω –∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤ —Å–º–µ—Ç
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-4">
                  <div className="flex items-center gap-2 text-sm text-slate-600">
                    <Icon name="FileSpreadsheet" size={16} />
                    Excel (.xlsx, .xls)
                  </div>
                  <div className="flex items-center gap-2 text-sm text-slate-600">
                    <Icon name="File" size={16} />
                    CSV —Ñ–∞–π–ª—ã
                  </div>
                  <div className="flex items-center gap-2 text-sm text-slate-600">
                    <Icon name="FileText" size={16} />
                    –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        ) : (
          // –§–æ—Ä–º–∞ –ö–°-2
          <div className="space-y-6">
            {/* –®–∞–ø–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="FileBarChart" size={24} className="text-primary" />
                  –ê–∫—Ç –æ –ø—Ä–∏–µ–º–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –ö–°-2
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-3 gap-4">
                  <div>
                    <Label htmlFor="actNumber">–ö–°-2 ‚Ññ</Label>
                    <Input 
                      id="actNumber" 
                      value={formData.actNumber}
                      onChange={(e) => setFormData({...formData, actNumber: e.target.value})}
                      placeholder="–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞" 
                    />
                  </div>
                  <div>
                    <Label htmlFor="docDate">–æ—Ç</Label>
                    <Input 
                      id="docDate" 
                      type="date"
                      value="2025-08-06"
                      className="w-full"
                    />
                  </div>
                  <div>
                    <Label htmlFor="printForm">–ü–µ—á–∞—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞</Label>
                    <Select value={formData.printForm} onValueChange={(value) => setFormData({...formData, printForm: value})}>
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="350">–ö–°-2 #1 (—Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏)</SelectItem>
                        <SelectItem value="351">–ö–°-2 #2 (–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </CardContent>
            </Card>

            <div className="grid lg:grid-cols-3 gap-6">
              {/* –ü–æ–¥—Ä—è–¥—á–∏–∫ */}
              <Card>
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg">–ü–æ–¥—Ä—è–¥—á–∏–∫ (—Å—É–±–ø–æ–¥—Ä—è–¥—á–∏–∫)</CardTitle>
                  <div className="flex gap-2">
                    <Input placeholder="–∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ –ò–ù–ù" className="text-sm" />
                    <Button variant="outline" size="sm">
                      <Icon name="Search" size={16} />
                    </Button>
                  </div>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div>
                    <Label className="text-xs">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–ê–¥—Ä–µ—Å</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–¢–µ–ª–µ—Ñ–æ–Ω—ã</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–û–ö–ü–û</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–î–æ–ª–∂–Ω–æ—Å—Ç—å</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–°–¥–∞–ª (–§.–ò.–û.)</Label>
                    <Input className="h-8" />
                  </div>
                </CardContent>
              </Card>

              {/* –ó–∞–∫–∞–∑—á–∏–∫ */}
              <Card>
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg">–ó–∞–∫–∞–∑—á–∏–∫ (–≥–µ–Ω–ø–æ–¥—Ä—è–¥—á–∏–∫)</CardTitle>
                  <div className="flex gap-2">
                    <Input placeholder="–∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ –ò–ù–ù" className="text-sm" />
                    <Button variant="outline" size="sm">
                      <Icon name="Search" size={16} />
                    </Button>
                  </div>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div>
                    <Label className="text-xs">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–ê–¥—Ä–µ—Å</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–¢–µ–ª–µ—Ñ–æ–Ω—ã</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–û–ö–ü–û</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–î–æ–ª–∂–Ω–æ—Å—Ç—å</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–ü—Ä–∏–Ω—è–ª (–§.–ò.–û.)</Label>
                    <Input className="h-8" />
                  </div>
                </CardContent>
              </Card>

              {/* –ò–Ω–≤–µ—Å—Ç–æ—Ä */}
              <Card>
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg">–ò–Ω–≤–µ—Å—Ç–æ—Ä</CardTitle>
                  <div className="flex gap-2">
                    <Input placeholder="–∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ –ò–ù–ù" className="text-sm" />
                    <Button variant="outline" size="sm">
                      <Icon name="Search" size={16} />
                    </Button>
                  </div>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div>
                    <Label className="text-xs">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–ê–¥—Ä–µ—Å</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–¢–µ–ª–µ—Ñ–æ–Ω—ã</Label>
                    <Input className="h-8" />
                  </div>
                  <div>
                    <Label className="text-xs">–û–ö–ü–û</Label>
                    <Input className="h-8" />
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ */}
            <Card>
              <CardHeader>
                <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-2 gap-4">
                  <div className="space-y-4">
                    <div>
                      <Label>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–π–∫–∏</Label>
                      <Textarea rows={2} />
                    </div>
                    <div>
                      <Label>–ê–¥—Ä–µ—Å —Å—Ç—Ä–æ–π–∫–∏</Label>
                      <Textarea rows={2} />
                    </div>
                    <div>
                      <Label>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞</Label>
                      <Textarea rows={2} />
                    </div>
                    <div>
                      <Label>–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ –û–ö–î–ü</Label>
                      <Input />
                    </div>
                  </div>
                  <div className="space-y-4">
                    <div className="grid grid-cols-2 gap-3">
                      <div>
                        <Label>–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ–¥—Ä—è–¥–∞</Label>
                        <Input />
                      </div>
                      <div>
                        <Label>–î–∞—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞</Label>
                        <Input type="date" />
                      </div>
                    </div>
                    <div>
                      <Label>–°–º–µ—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É</Label>
                      <Input placeholder="0.00" />
                    </div>
                    <div className="grid grid-cols-2 gap-3">
                      <div>
                        <Label>–û—Ç—á–µ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Å</Label>
                        <Input type="date" />
                      </div>
                      <div>
                        <Label>–û—Ç—á–µ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø–æ</Label>
                        <Input type="date" />
                      </div>
                    </div>
                    <div>
                      <Label>–°—Ç–∞–≤–∫–∞ –ù–î–°</Label>
                      <div className="space-y-2">
                        <Select value={formData.ndsRate} onValueChange={(value) => setFormData({...formData, ndsRate: value})}>
                          <SelectTrigger>
                            <SelectValue />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="0">–±–µ–∑ –ù–î–°</SelectItem>
                            <SelectItem value="3">0%</SelectItem>
                            <SelectItem value="10">10%</SelectItem>
                            <SelectItem value="20">20%</SelectItem>
                          </SelectContent>
                        </Select>
                        <div className="flex gap-4 text-sm">
                          <label className="flex items-center gap-2">
                            <input 
                              type="radio" 
                              name="ndsType" 
                              value="1" 
                              checked={formData.ndsType === '1'}
                              onChange={(e) => setFormData({...formData, ndsType: e.target.value})}
                            />
                            –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å
                          </label>
                          <label className="flex items-center gap-2">
                            <input 
                              type="radio" 
                              name="ndsType" 
                              value="2"
                              checked={formData.ndsType === '2'}
                              onChange={(e) => setFormData({...formData, ndsType: e.target.value})}
                            />
                            –≤ —Å—É–º–º–µ
                          </label>
                          <label className="flex items-center gap-2">
                            <input 
                              type="radio" 
                              name="ndsType" 
                              value="3"
                              checked={formData.ndsType === '3'}
                              onChange={(e) => setFormData({...formData, ndsType: e.target.value})}
                            />
                            —Å–≤–µ—Ä—Ö—É
                          </label>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –¢–∞–±–ª–∏—Ü–∞ —Ä–∞–±–æ—Ç */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center justify-between">
                  –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
                  <Button onClick={addWorkItem} size="sm">
                    <Icon name="Plus" size={16} className="mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É
                  </Button>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="overflow-x-auto">
                  <table className="w-full border-collapse border border-slate-300">
                    <thead>
                      <tr className="bg-slate-100">
                        <th className="border border-slate-300 px-2 py-2 text-xs">‚Ññ –ø–æ —Å–º–µ—Ç–µ</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">‚Ññ –µ–¥. —Ä–∞—Å—Ü.</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">–ï–¥.</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">–ö–æ–ª-–≤–æ</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">–¶–µ–Ω–∞</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">–°—Ç–æ–∏–º–æ—Å—Ç—å</th>
                        <th className="border border-slate-300 px-2 py-2 text-xs">–î–µ–π—Å—Ç–≤–∏—è</th>
                      </tr>
                    </thead>
                    <tbody>
                      {workItems.map((item) => (
                        <tr key={item.id}>
                          <td className="border border-slate-300 px-1 py-1">
                            <Input 
                              className="h-8 text-xs border-0"
                              value={item.smetaNumber}
                              onChange={(e) => updateWorkItem(item.id, 'smetaNumber', e.target.value)}
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1">
                            <Textarea 
                              className="min-h-8 text-xs border-0 resize-none"
                              rows={2}
                              value={item.name}
                              onChange={(e) => updateWorkItem(item.id, 'name', e.target.value)}
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1">
                            <Input 
                              className="h-8 text-xs border-0"
                              value={item.edNumber}
                              onChange={(e) => updateWorkItem(item.id, 'edNumber', e.target.value)}
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1">
                            <Input 
                              className="h-8 text-xs border-0"
                              value={item.units}
                              onChange={(e) => updateWorkItem(item.id, 'units', e.target.value)}
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1">
                            <Input 
                              className="h-8 text-xs border-0"
                              type="number"
                              step="0.01"
                              value={item.quantity}
                              onChange={(e) => updateWorkItem(item.id, 'quantity', e.target.value)}
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1">
                            <Input 
                              className="h-8 text-xs border-0"
                              type="number"
                              step="0.01"
                              value={item.price}
                              onChange={(e) => updateWorkItem(item.id, 'price', e.target.value)}
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1">
                            <Input 
                              className="h-8 text-xs border-0 bg-slate-50"
                              value={item.totalPrice}
                              readOnly
                            />
                          </td>
                          <td className="border border-slate-300 px-1 py-1 text-center">
                            <Button 
                              variant="ghost" 
                              size="sm"
                              onClick={() => deleteWorkItem(item.id)}
                              disabled={workItems.length <= 1}
                            >
                              <Icon name="Trash2" size={14} className="text-red-500" />
                            </Button>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                    <tfoot>
                      <tr className="bg-slate-50 font-medium">
                        <td colSpan={5} className="border border-slate-300 px-2 py-2 text-right">–ù–î–°:</td>
                        <td className="border border-slate-300 px-2 py-2 text-center">{ndsTotal.toFixed(2)} —Ä.</td>
                        <td className="border border-slate-300 px-2 py-2 text-right font-bold">–ò—Ç–æ–≥–æ:</td>
                        <td className="border border-slate-300 px-2 py-2 text-center font-bold">{total.toFixed(2)} —Ä.</td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
                <div className="flex gap-2 mt-4">
                  <Button variant="outline" size="sm" onClick={addWorkItem}>
                    <Icon name="Plus" size={16} className="mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É
                  </Button>
                  <Button variant="outline" size="sm" onClick={() => {
                    for(let i = 0; i < 10; i++) addWorkItem();
                  }}>
                    –î–æ–±–∞–≤–∏—Ç—å 10 —Å—Ç—Ä–æ–∫
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* –≠–∫—Å–ø–æ—Ä—Ç */}
            <Card>
              <CardHeader>
                <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≤–æ–¥–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-between">
                  <div className="flex gap-3">
                    <Select defaultValue="pdf">
                      <SelectTrigger className="w-48">
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="pdf">PDF (Portable Document Format)</SelectItem>
                        <SelectItem value="xlsx">XLSX (Microsoft Office)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <div className="flex gap-3">
                    <Button variant="secondary">
                      <Icon name="Eye" size={16} className="mr-2" />
                      –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
                    </Button>
                    <Button>
                      <Icon name="Printer" size={16} className="mr-2" />
                      –ü–µ—á–∞—Ç—å
                    </Button>
                    <Button onClick={handleExportExcel} className="bg-green-600 hover:bg-green-700">
                      <Icon name="Download" size={16} className="mr-2" />
                      –°–∫–∞—á–∞—Ç—å
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </div>
    </div>
  );
};

export default Index;